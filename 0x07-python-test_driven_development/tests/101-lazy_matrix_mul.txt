The ``101-lazy_matrix_mul`` module
======================

Using ``101-lazy_matrix_mul``
-------------------

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
    [[ 7 10]
     [15 22]]

    >>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
    [[13 16]]

    >>> lazy_matrix_mul(123, [[1]])
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([[1]], 123)
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul(["test", "test1"], [[1]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,) and (1,1) not aligned: 2 (dim 0) != 1 (dim 0)

    >>> lazy_matrix_mul([[1]], ["test", "test1"])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,1) and (2,) not aligned: 1 (dim 1) != 2 (dim 0)

    >>> lazy_matrix_mul([], [[1]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (0,) and (1,1) not aligned: 0 (dim 0) != 1 (dim 0)

    >>> lazy_matrix_mul([[1]], [])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,1) and (0,) not aligned: 1 (dim 1) != 0 (dim 0)

    >>> lazy_matrix_mul([[]], [[1]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,0) and (1,1) not aligned: 0 (dim 1) != 1 (dim 0)

    >>> lazy_matrix_mul([[1]], [[]])
    array([], shape=(1, 0), dtype=int64)

    >>> lazy_matrix_mul([[1, "test"]], [[1]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,2) and (1,1) not aligned: 2 (dim 1) != 1 (dim 0)

    >>> lazy_matrix_mul([[1]], [[1, "test"]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[1, 2], [1]], [[1]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1]], [[1, 3], [1]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1, 2]], [[1, 2]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

    >>> lazy_matrix_mul([[1, 2]])
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

    >>> lazy_matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
